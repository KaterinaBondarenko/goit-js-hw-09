{"version":3,"sources":["js/03-promises.js"],"names":["refs","formEl","document","querySelector","delayEl","stepEl","amountEl","onCreatePromises","event","preventDefault","delay","Number","value","step","amount","promises","i","push","createPromise","forEach","promise","then","position","console","log","catch","Promise","resolve","reject","setTimeout","Math","random","addEventListener"],"mappings":";AAAA,MAAMA,EAAO,CACXC,OAAQC,SAASC,cAAc,SAC/BC,QAASF,SAASC,cAAc,uBAChCE,OAAQH,SAASC,cAAc,sBAC/BG,SAAUJ,SAASC,cAAc,yBAKnC,SAASI,EAAiBC,GACxBA,EAAMC,iBACFC,IAAAA,EAAQC,OAAOX,EAAKI,QAAQQ,OAC1BC,MAAAA,EAAOF,OAAOX,EAAKK,OAAOO,OAC1BE,EAASH,OAAOX,EAAKM,SAASM,OAE9BG,EAAW,GAEZ,IAAA,IAAIC,EAAI,EAAGA,GAAKF,EAAQE,GAAK,EAChCD,EAASE,KAAKC,EAAcF,EAAGN,IAC/BA,GAASG,EAEXE,EAASI,QAAQC,IACfA,EACGC,KAAK,EAAGC,SAAAA,EAAUZ,MAAAA,MACjBa,QAAQC,2BAA2BF,QAAeZ,SAEnDe,MAAM,EAAGH,SAAAA,EAAUZ,MAAAA,MAClBa,QAAQC,0BAA0BF,QAAeZ,WAKzD,SAASQ,EAAcI,EAAUZ,GACxB,OAAA,IAAIgB,QAAQ,CAACC,EAASC,KAC3BC,WAAW,KACaC,KAAKC,SAAW,GAEpCJ,EAAQ,CAAEL,SAAAA,EAAUZ,MAAAA,IAEpBkB,EAAO,CAAEN,SAAAA,EAAUZ,MAAAA,KAEpBA,KAlCPV,EAAKC,OAAO+B,iBAAiB,SAAUzB","file":"03-promises.c19f3c2a.js","sourceRoot":"../src","sourcesContent":["const refs = {\n  formEl: document.querySelector('.form'),\n  delayEl: document.querySelector('input[name=\"delay\"]'),\n  stepEl: document.querySelector('input[name=\"step\"]'),\n  amountEl: document.querySelector('input[name=\"amount\"]'),\n};\n\nrefs.formEl.addEventListener('submit', onCreatePromises);\n\nfunction onCreatePromises(event) {\n  event.preventDefault();\n  let delay = Number(refs.delayEl.value);\n  const step = Number(refs.stepEl.value);\n  const amount = Number(refs.amountEl.value);\n\n  const promises = [];\n\n  for (let i = 1; i <= amount; i += 1) {\n    promises.push(createPromise(i, delay));\n    delay += step;\n  }\n  promises.forEach(promise => {\n    promise\n      .then(({ position, delay }) => {\n        console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n  });\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ position, delay }); // Fulfill\n      } else {\n        reject({ position, delay }); // Reject\n      }\n    }, delay);\n  });\n}\n"]}